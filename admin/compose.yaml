services:
#  admin-service:
#    container_name: admin-service
#    build:
#      context: .
#    ports:
#      - 8081:8081
#    environment:
#      - SPRING_DATASOURCE_URL=${DATASOURCE_URL}
#      - SPRING_DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
#      - SPRING_DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
#      - SPRING_PROFILES_ACTIVE=${ACTIVE_PROFILE}
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
#      - SPRING_JPA_SHOW_SQL=true
#      - SERVER_PORT=8081
#    depends_on:
#      db:
#        condition: service_healthy
  db:
    container_name: db
    image: postgres
    user: postgres
    restart: always
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=vacation_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

